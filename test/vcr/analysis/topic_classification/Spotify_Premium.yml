---
http_interactions:
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"model":"gpt-4o","messages":[{"role":"system","content":"You are an
        assistant specialized in entity recognition. Your task is to analyze text
        and determine the category of the entity in the text. This is a list of entities
        we support: * brand: a brand name, like ''Apple'', ''Samsung'', ''Google'',
        etc. * product: a product name, like ''iPhone'', ''Galaxy'', ''Pixel'', etc.
        * service: A provided or subscribed offering, such as “Netflix,” “Amazon Prime,”
        or “Uber.” If the entity includes both the brand and the product, return ''product''
        and set the brand accordingly. For example: * ''Apply iPhone 15 Pro Max''
        should be returned as a product with brand: ''Apple'', product: ''iPhone 15
        Pro Max'' If the entity is a service, return ''service'' and set the service
        accordingly. For example: * ''Netflix'' should be returned as a service with
        brand name: ''Netflix'' * ''Amazon Prime'' should be returned as a service
        with brand name: ''Amazon'', and product name: \"Prime\" If the entity is
        neither a brand nor a product, return ''other'' and set the other accordingly.
        For example: * ''privacy'' should be returned as other with value: ''privacy''
        * ''AI'' should be returned as other with value: ''AI'' Be sure to identify
        the entity type correctly, as it will be used to determine the next step in
        the analysis."},{"role":"user","content":"Input: Spotify Premium"}],"temperature":0.0,"response_format":{"type":"json_schema","json_schema":{"name":"schema","description":"Schema
        for the structured response","schema":{"type":"object","properties":{"entity_type":{"type":"string","enum":["brand","product","service","other"],"description":"The
        detected category for the input text"},"brand":{"type":"string","description":"If
        it''s a brand, the detected brand for the input text, if it''s a product,
        the brand of or maker of the product"},"product":{"type":"string","description":"If
        it''s a product, the detected product for the input text, minus the brand,
        that must be included in the brand field"},"other":{"type":"string","description":"If
        it''s not a brand or product, the detected category for the input text"}},"required":["entity_type"],"additionalProperties":false,"strict":true,"$defs":{}}}}}'
    headers:
      Content-Type:
      - application/json
      Authorization:
      - Bearer <API_KEY>
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 25 Nov 2024 15:17:40 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Expose-Headers:
      - X-Request-ID
      Openai-Organization:
      - user-qnoh4d6vex03uarljj9vor3n
      Openai-Processing-Ms:
      - '447'
      Openai-Version:
      - '2020-10-01'
      X-Ratelimit-Limit-Requests:
      - '5000'
      X-Ratelimit-Limit-Tokens:
      - '800000'
      X-Ratelimit-Remaining-Requests:
      - '4999'
      X-Ratelimit-Remaining-Tokens:
      - '799668'
      X-Ratelimit-Reset-Requests:
      - 12ms
      X-Ratelimit-Reset-Tokens:
      - 24ms
      X-Request-Id:
      - req_9bed118870f64be9a2b46e20d47b590e
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=uKPZjKrIeX2R1DiKoJl8RORlQUOL.QcI0AHa4OpJ5hw-1732547860-1.0.1.1-B33c02LhwgXzQ6xPGYRAHFFCx1UEdG.OoKPU1Xo4u6Rk08iMY_MIEEOnsWedoMh.4tQJukx2ApcRzR2ExvDroQ;
        path=/; expires=Mon, 25-Nov-24 15:47:40 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=2bCjU2Btijw1yFk0SsnSx8nl4DkTtO9BAJZ3W6cYDic-1732547860150-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
      Cf-Ray:
      - 8e829b5a3ff53850-MAD
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-AXV8FxkLbvjkziwNkt0jYm4Z7FbtP",
          "object": "chat.completion",
          "created": 1732547859,
          "model": "gpt-4o-2024-08-06",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "{\"entity_type\":\"service\",\"brand\":\"Spotify\",\"product\":\"Premium\"}",
                "refusal": null
              },
              "logprobs": null,
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 464,
            "completion_tokens": 14,
            "total_tokens": 478,
            "prompt_tokens_details": {
              "cached_tokens": 0,
              "audio_tokens": 0
            },
            "completion_tokens_details": {
              "reasoning_tokens": 0,
              "audio_tokens": 0,
              "accepted_prediction_tokens": 0,
              "rejected_prediction_tokens": 0
            }
          },
          "system_fingerprint": "fp_7f6be3efb0"
        }
  recorded_at: Mon, 25 Nov 2024 15:17:40 GMT
recorded_with: VCR 6.3.1
