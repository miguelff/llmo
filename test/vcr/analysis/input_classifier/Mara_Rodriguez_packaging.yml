---
http_interactions:
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"model":"gpt-4o-mini","messages":[{"role":"system","content":"You
        are an assistant specialized in entity recognition.\nYour task is to analyze
        text and determine the category of the entity in the text.\nThis is a list
        of entities we support:\n* brand: a brand name, like ''Apple'', ''Samsung'',
        ''Google'', etc.\n* product: a product name, like ''iPhone'', ''Galaxy'',
        ''Pixel'', etc.\n* service: A provided or subscribed offering, such as ''Netflix'',
        ''Amazon Prime'' or ''Uber''.\nIf the entity includes both the brand and the
        product, return ''product'' and set the brand accordingly. For example:\n*
        ''Apply iPhone 15 Pro Max'' should be returned as a product with brand: ''Apple'',
        product: ''iPhone 15 Pro Max''\nIf the entity is a service, return ''service''
        and set the service accordingly. For example:\n* ''Netflix'' should be returned
        as a service with brand name: ''Netflix''\n* ''Amazon Prime'' should be returned
        as a service with brand name: ''Amazon'', and product name: \"Prime\"\nIf
        the entity is neither a brand nor a product, return ''other'' and set the
        other accordingly. For example:\n* ''privacy'' should be returned as other
        with value: ''privacy''\n* ''AI'' should be returned as other with value:
        ''AI''\nBe sure to identify the entity type correctly, as it will be used
        to determine the next step in the analysis.\n"},{"role":"user","content":"Input:
        Mara Rodriguez packaging"}],"temperature":0.0,"response_format":{"type":"json_schema","json_schema":{"name":"schema","description":"Schema
        for the structured response","schema":{"type":"object","properties":{"entity_type":{"type":"string","enum":["brand","product","service","other"],"description":"The
        detected category for the input text"},"brand":{"type":"string","description":"If
        it''s a brand, the detected brand for the input text, if it''s a product,
        the brand of or maker of the product"},"product":{"type":"string","description":"If
        it''s a product, the detected product for the input text, minus the brand,
        that must be included in the brand field"},"other":{"type":"string","description":"If
        it''s not a brand or product, the detected category for the input text"}},"required":["entity_type"],"additionalProperties":false,"strict":true,"$defs":{}}}}}'
    headers:
      Content-Type:
      - application/json
      Authorization:
      - Bearer <API_KEY>
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 26 Nov 2024 09:25:50 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Expose-Headers:
      - X-Request-ID
      Openai-Organization:
      - user-qnoh4d6vex03uarljj9vor3n
      Openai-Processing-Ms:
      - '355'
      Openai-Version:
      - '2020-10-01'
      X-Ratelimit-Limit-Requests:
      - '5000'
      X-Ratelimit-Limit-Tokens:
      - '4000000'
      X-Ratelimit-Remaining-Requests:
      - '4999'
      X-Ratelimit-Remaining-Tokens:
      - '3999668'
      X-Ratelimit-Reset-Requests:
      - 12ms
      X-Ratelimit-Reset-Tokens:
      - 4ms
      X-Request-Id:
      - req_0487977ef29875065070715c1e4feb45
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=taCxSlcr4wCool4fDUjdMf8KLm7zGE9TtfAFyzpyloI-1732613150-1.0.1.1-7RtN7Rsk63odSjMLOjY44mE0Zvw7DUGdmuR4t.V.0NXu8PHrgDUby3ocHK6aof4pUyB3AhG.0vXxDEBa7w_gxw;
        path=/; expires=Tue, 26-Nov-24 09:55:50 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=vwBc7zgg5xXbDc4XpzRf15Fa0OIrgYiWArX2q64rTXg-1732613150292-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
      Cf-Ray:
      - 8e88d55a2b8a669b-MAD
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-AXm7KiK3tI6F45V7ywBxDLsAIiVzd",
          "object": "chat.completion",
          "created": 1732613150,
          "model": "gpt-4o-mini-2024-07-18",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "{\"entity_type\":\"other\",\"brand\":\"\",\"product\":\"\",\"other\":\"Mara Rodriguez packaging\"}",
                "refusal": null
              },
              "logprobs": null,
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 465,
            "completion_tokens": 17,
            "total_tokens": 482,
            "prompt_tokens_details": {
              "cached_tokens": 0,
              "audio_tokens": 0
            },
            "completion_tokens_details": {
              "reasoning_tokens": 0,
              "audio_tokens": 0,
              "accepted_prediction_tokens": 0,
              "rejected_prediction_tokens": 0
            }
          },
          "system_fingerprint": "fp_0705bf87c0"
        }
  recorded_at: Tue, 26 Nov 2024 09:25:50 GMT
recorded_with: VCR 6.3.1
